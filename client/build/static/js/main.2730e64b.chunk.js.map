{"version":3,"sources":["SearchArea.js","Header.js","List.js","utils/API.js","BookList.js","HomePage.js","components/profilemanagement/CreateAccountForm.js","components/profilemanagement/EditNickname.js","components/profilemanagement/EditPersonalInfo.js","components/profilemanagement/ShippingAddressList.js","components/profilemanagement/EditShippingAddresses.js","components/profilemanagement/CreditCardsList.js","components/profilemanagement/EditCreditCards.js","components/profilemanagement/EditProfileComponent.js","components/profilemanagement/LoginForm.js","utils/AuthService.js","components/NavibarComponent.js","components/PrivateRoute.js","Profile.js","components/ShopCartPagination.js","ShoppingCart.js","Tab.js","components/WishList.js","fontawesome.js","components/StarRatingComponent.js","components/CommentComponent.js","components/CommentListComponent.js","components/CommentFormComponent.js","Reviews.js","App.js","serviceWorker.js","index.js"],"names":["SearchArea","props","state","books","searchTerm","handleSearch","bind","searchButtonClicked","document","getElementById","addEventListener","event","keyCode","click","this","setState","target","value","e","alert","preventDefault","InputGroup","style","display","alignItems","FormControl","id","borderRadius","placeholder","aria-label","aria-describedby","onChange","onFocus","setTextBoxListner","Append","paddingLeft","Link","component","RouterLink","to","onClick","Button","color","Component","Header","handleClick","anchorEl","currentTarget","handleClose","handleLogout","logoutCurrentUser","currentUser","isUserLoggedIn","nextProps","nextState","username","className","textDecoration","align","loggedInUser","logoutUser","Dropdown","disabled","textTransform","aria-owns","undefined","aria-haspopup","Toggle","split","Menu","alignRight","Item","BookListContainer","styled","div","CoverContainer","DetailContainer","Line","hr","List","book","src","bookInfo","cover","alt","modalDiv","modalImage","caption","innerHTML","title","showModal","ListItem","pathname","underline","author","genre","publisher","pub_date","price","data","axios","post","token","localStorage","getItem","headers","ListContainer","NoResultsContainer","BookList","onChangePage","page","console","log","Math","ceil","length","onPage","allBooks","fi","order","pageSize","activePage","itemsCountPerPage","pageRangeDisplayed","totalItemsCount","sort","retriveResults","returnList","showNoResults","changeState","ASC","DESC","handlePageChange","match","params","term","size","pageNumber","get","then","response","API","res","catch","err","linq","from","where","x","JSON","stringify","includes","toArray","map","index","key","bookIndex","class","defaultValue","HomePage","font-family","CreateAccountForm","useState","error","setError","email","setEmail","firstName","setFirstName","lastName","setLastName","password","setPassword","submitHandle","status","AccountCreationError","Fragment","Container","paddingTop","Alert","dismissable","variant","onClose","Form","onSubmit","Group","controlId","Label","Control","type","EditNickname","userEmail","nickname","userNickname","setUserNickname","nicknameUpdate","primaryKeys","updates","$set","onNicknameUpdate","htmlFor","EditALL","setUserEmail","officialUserEmail","setOfficialUserEmail","userFirstName","setUserFirstName","userLastName","setUserLastName","homeAddress","userHomeAddress","setUserHomeAddress","alphaCheck","test","newUserEmailUpdate","newPersonalInfo","onNewPersonalInfo","onKeyPress","ShippingAddressList","trueAddresses","setTrueAddresses","addresses","setAddresses","newAddress","setNewAddress","formCheck","setFormCheck","updateTrueAddresses","useEffect","Card","address","ListGroup","newAddresses","updateAddress","ButtonGroup","shippingAddressUpdate","editHandle","deleteHandle","EditShippingAddresses","Body","CreditCardsList","trueCreditCards","setTrueCreditCards","creditCards","setCreditCards","creditCardNumber","setCreditCardNumber","CVV","setCVV","expirationMonth","setExpirationMonth","expirationYear","setExpirationYear","updateTrueCreditCards","months","checkLength","inString","inChar","charCodeAt","slice","maxLength","creditCard","onInput","creditCardNum","ccn","newCreditCard","newCreditCards","editCreditCardCCNHandle","Row","as","Col","md","month","editCreditCardExpMonthHandle","year","editCreditCardExpYearHandle","width","cvv","editCreditCardCVVHandle","creditCardUpdate","EditCreditCards","EditProfileComponent","setNickname","setHomeAddress","renderChildren","setRenderChildren","newNickname","EditPersonalInfo","newFirstName","newLastName","newEmail","newHomeAddress","Spinner","animation","LoginForm","loginFailed","setLoginFailed","redirect","setRedirect","loginHandle","credentials","setItem","handleAuth","loginResponseHandle","loginErrorHandle","inline","isAuthenticated","isTokenExpired","decode","header","exp","Date","now","getProfile","NavibarComponent","AuthService","authenticated","setAuthenticated","Navbar","bg","expand","Divider","removeItem","PrivateRoute","rest","render","location","Profile","path","Auth","ShopCartPagination","First","Prev","Ellipsis","active","Next","Last","ShoppingCart","name","description","bookID","info","Media","height","oneItemCreatorSample","ShopCartList","Tab","label","activeTab","WishList","dropdownOpen","setDropdownOpen","buttonLabel","modal","setModal","unmountOnClose","toggle","marginBottom","FormGroup","Input","isOpen","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","href","Modal","ModalHeader","ModalBody","ModalFooter","UncontrolledCollapse","toggler","flush","marginRight","ListGroupItem","tag","Badge","pill","marginLeft","marginTop","library","add","faStar","StarRatingComponent","inputValue","editing","stopPropagation","onStarClick","onStarHover","onStarHoverOut","starCount","starColor","emptyStarColor","starStyles","i","float","cursor","radioStyles","position","starNodes","starNodeInput","checked","starNodeLabel","onMouseOver","onMouseLeave","renderIcon","push","renderStarIcon","renderStarIconHalf","icon","classes","cx","renderStars","defaultProps","Comment","comment","message","time","CommentList","comments","loading","CommentForm","handleFieldChange","goAnonymous","isFormValid","fetch","method","body","json","addComment","rows","renderError","border","App","setComments","setLoading","Wishlist","Reviews","Boolean","window","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2730e64b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport { Link } from '@material-ui/core';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport default class SearchArea extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            books: [],  //Contains all the book returned by the search\r\n            searchTerm: ''\r\n        };\r\n\r\n        //Bind the methods to the component\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.searchButtonClicked = this.searchButtonClicked.bind(this);\r\n    }\r\n    \r\n\r\n    setTextBoxListner()\r\n    {\r\n        var input = document.getElementById(\"searchText\");\r\n        \r\n        input.addEventListener(\"keyup\", function (event) {\r\n            if (event.keyCode === 13) {\r\n                \r\n                document.getElementById(\"linkToList\").click();\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.setState({\r\n            searchTerm: event.target.value\r\n        });\r\n    }\r\n\r\n    searchButtonClicked(e) {\r\n        if (this.state.searchTerm === \"\")\r\n        {\r\n            alert(\"Please enter a search term in the textbox\");\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <InputGroup style={{display: 'flex', alignItems: 'center'}}>\r\n                <FormControl\r\n                    id=\"searchText\"\r\n                    style={{borderRadius: '1.2rem'}}\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={this.handleSearch}\r\n                    onFocus={this.setTextBoxListner}\r\n                    />\r\n                <InputGroup.Append style={{paddingLeft: '3%'}}>\r\n                <Link id=\"linkToList\" \r\n                    component={RouterLink} \r\n                    to={\"/bookList/\" + this.state.searchTerm}\r\n                    onClick={this.searchButtonClicked}\r\n                    ><Button style={{color: 'white'}}>\r\n                    </Button>\r\n                </Link>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { NavLink, HashRouter } from \"react-router-dom\";\r\nimport SearchArea from \"./SearchArea\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            currentUser: props.currentUser,\r\n            isUserLoggedIn: props.isUserLoggedIn\r\n        }\r\n\r\n        this.logoutCurrentUser = this.logoutCurrentUser.bind(this);\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if (nextProps !== this.props) {\r\n            this.setState({\r\n                currentUser: nextProps.username, \r\n                isUserLoggedIn: nextProps.isUserLoggedIn\r\n            })\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <HashRouter>\r\n            <div className=\"topnav\">\r\n                <div className=\"logo\">\r\n                <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                    to=\"/HomePage\">\r\n                    <h1 align = \"left\">Geek Text</h1>\r\n                    </NavLink>\r\n                </div>\r\n                <div id=\"search-info-container\" className=\"search\">\r\n                <SearchArea></SearchArea>\r\n                </div>\r\n                <div className=\"rightIcons\">\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"loginButton\">\r\n                        {this.loggedInUser()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogout = () => {\r\n        this.logoutCurrentUser();\r\n        alert(\"You have been logged out\");\r\n        \r\n    };\r\n\r\n    logoutCurrentUser() {\r\n        this.props.logoutUser(\"null\", false);\r\n    }\r\n\r\n    loggedInUser () {\r\n\r\n        const { anchorEl } = this.state;\r\n\r\n        if (this.state.isUserLoggedIn) {\r\n            return (\r\n                <HashRouter>\r\n                    <div>\r\n                        <Dropdown>\r\n                            <Button\r\n                            disabled\r\n                            style={{textDecoration: 'none', color: 'black', textTransform: 'none'}}\r\n                            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick}>\r\n                            {this.props.currentUser}\r\n                            </Button>\r\n                            <Dropdown.Toggle split className=\"menuToggle\"></Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu alignRight>\r\n                                <Dropdown.Item>\r\n                                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                        to=\"/profilesettings\"\r\n                                        >Your Account</NavLink>\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item>\r\n                                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                        to=\"/loginSettings\"\r\n                                        >Your Login Settings</NavLink>\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item>\r\n                                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                        to=\"/addressSettings\"\r\n                                        >Your Addresses</NavLink>\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item>\r\n                                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                    to=\"/paymentSettings\"\r\n                                    >Your Payment Methods</NavLink>\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item>\r\n                                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                        to=\"/\"\r\n                                        onClick={this.handleLogout}\r\n                                        >Sign Out</NavLink>\r\n                                </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                            </Dropdown>\r\n                    </div>\r\n                </HashRouter>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                to=\"/Profile\"\r\n                                >Login / Register </NavLink>\r\n                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                to=\"/ShoppingCart\"\r\n                                >Shopping Cart </NavLink>\r\n                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                to=\"/BookDetails\"\r\n                                >Book Details </NavLink>\r\n                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                to=\"/Wishlist\"\r\n                                >Wishlist </NavLink>\r\n                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                to=\"/Reviews\"\r\n                                >Reviews </NavLink>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Link, ListItem } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport {List as ListExt} from \"@material-ui/core\";\r\n\r\nconst BookListContainer = styled.div`\r\n    width: 100%;\r\n    text-align: -webkit-center;\r\n`;\r\n\r\nconst CoverContainer = styled.div`\r\n    padding-left: 10px;\r\n    float: left;\r\n`;\r\n\r\nconst DetailContainer = styled.div`\r\n    padding-left: 275px;\r\n    text-align: center;\r\n`;\r\n\r\nconst Line = styled.hr`\r\n    display: -ms-grid;\r\n    unicode-bidi: isolate;\r\n    margin-block-start: 0.5em;\r\n    margin-block-end: 0.5em;\r\n    margin-inline-start: auto;\r\n    margin-inline-end: auto;\r\n`;\r\n\r\nconst List = (book) => {\r\n    \r\n    return ( <div>\r\n                <BookListContainer>\r\n                    <CoverContainer>\r\n                        <img id=\"cover\" \r\n                                src={book.bookInfo.cover} \r\n                                alt=\"Image not available\" \r\n                                onClick={ function () {showModal(book)}}>\r\n                        </img>\r\n                    </CoverContainer>\r\n                    <DetailContainer>\r\n                        <ListExt>\r\n                            <ListItem>Title: <Link \r\n                                component={RouterLink} \r\n                                to={{pathname: \"/bookDetails\", state: {book: book}}} \r\n                                style={{color: \"MediumBlue\"}}\r\n                                underline=\"always\">\r\n                                {book.bookInfo.title}\r\n                            </Link></ListItem>\r\n                            <ListItem>Author: <Link \r\n                                component={RouterLink} \r\n                                to={\"/authorPage/\" + book.bookInfo.author}\r\n                                style={{color: \"MediumBlue\"}}\r\n                                underline=\"always\">\r\n                                {book.bookInfo.author}\r\n                            </Link></ListItem>\r\n                            <ListItem>Genre: {book.bookInfo.genre}</ListItem>\r\n                            <ListItem>Publisher: {book.bookInfo.publisher}</ListItem>\r\n                            <ListItem>Publish Date: {book.bookInfo.pub_date}</ListItem>\r\n                            <ListItem>Price: ${book.bookInfo.price}</ListItem>\r\n                        </ListExt>\r\n                    </DetailContainer>\r\n                    <Line></Line>\r\n                </BookListContainer>\r\n            </div> );\r\n}\r\n\r\nfunction showModal(book) {\r\n    var modalDiv = document.getElementById(\"myModal\");\r\n    var modalImage = document.getElementById(\"img01\");\r\n    var caption = document.getElementById(\"caption\");\r\n    modalDiv.style.display = \"block\";\r\n    modalImage.src = book.bookInfo.cover;\r\n    caption.innerHTML = book.bookInfo.title;\r\n}\r\n \r\nexport default List","import axios from \"axios\";\r\n\r\n\r\nexport default {\r\n    //Gets all Campaign names\r\n    login: function (data) {\r\n        return axios.post('/api/auth', data);\r\n    },\r\n    createAccount: function (data) {\r\n        return axios.post('/api/auth/create', data);\r\n    },\r\n    getUser: function(data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/user/getUser', data, {headers: {\r\n            'x-access-token': token\r\n        }})\r\n    },\r\n    updateUser: function(data){\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/user/updateUser', data, {headers: {\r\n            'x-access-token':token\r\n        }})\r\n    },\r\n    updateUserEmail: function(data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/updateUserEmail', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    getShippingAddressesByUser: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/getShippingAddressesByUser', data, {headers: {\r\n            'x-access-token': token\r\n        }});\r\n    },\r\n    addShippingAddress: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/addShippingAddress', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    deleteShippingAddress: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/deleteShippingAddress', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    updateShippingAddress: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/updateShippingAddress', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    removeCreditCard: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/removeCreditCard', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    addCreditCard: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/addCreditCard', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    getCreditCardsByUser: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/getCreditCardsByUser', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    updateCreditCard: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/updateCreditCard', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    getSearchResults: function(data){\r\n        console.log('Doing post');\r\n        console.log('Data in post ' + data);\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/search/getSearchResults', data, {headers: {\r\n            'x-access-token':token\r\n        }});\r\n    },\r\n    getAllBooks: function(data){\r\n        return axios.post('/api/search/getAllBooks', data);\r\n    },\r\n    add: function(data) {\r\n        return axios.post('/api/ShoppingCart/add', data);\r\n    },\r\n    delete: function(data) {\r\n        return axios.post('/api/ShoppingCart/delete', data);\r\n    },\r\n    displayAll: function(data) {\r\n        return axios.post('/api/ShoppingCart/displayAll', data);\r\n    },\r\n    componentDidMount: function(data) {\r\n        console.log(\"I reached componentDidMount\");\r\n        return axios.get('/api/ShoppingCart', data);\r\n    },\r\n};","import React, {Component} from \"react\";\r\nimport List from \"./List\";\r\nimport API from './utils/API';\r\nimport styled from \"styled-components\";\r\nimport axios from 'axios';\r\nimport Pagination from \"react-js-pagination\";\r\nimport linq from \"linq\";\r\n\r\nconst pageSize = 10;\r\n\r\n\r\nconst ListContainer = styled.div`\r\n    width: 60%;\r\n    padding-top: 100px;\r\n    float: right;\r\n`;\r\n\r\nconst NoResultsContainer = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nvar topSellerClicked = false;\r\n\r\nclass BookList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            allBooks: [],\r\n            books: [],\r\n            fi:[],\r\n            onPage: 1,\r\n            order: \"ASC\",\r\n            pageSize:10,\r\n            activePage:1,\r\n            itemsCountPerPage: 1,\r\n            pageRangeDisplayed: 4,\r\n            totalItemsCount: 1,\r\n            sort: \"title\"\r\n        };\r\n        this.retriveResults = this.retriveResults.bind(this);\r\n        this.returnList = this.returnList.bind(this);\r\n        this.showNoResults = this.showNoResults.bind(this);\r\n        this.changeState = this.changeState.bind(this);\r\n        this.ASC = this.ASC.bind(this);\r\n        this.DESC = this.DESC.bind(this);\r\n        this.ASC.handlePageChange = this.handlePageChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.retriveResults(this.props.match.params.term);\r\n        if(this.props.pageSize){\r\n            this.setState({size: this.props.pageSize});\r\n          }\r\n    }\r\n\r\n\r\n    handlePageChange(pageNumber) {\r\n            console.log(`active page is ${pageNumber}`);\r\n        axios.get(\"http://localhost:3000/#/bookList?page=\"+ pageNumber).then.setState({\r\n            books:this.props.books,\r\n            itemsCountPerPage: this.props.itemsCountPerPage,\r\n            totalItemsCount: this.props.totalItemsCount,\r\n            activePage: this.props.activePage\r\n        });    \r\n        \r\n     }\r\n   \r\n\r\n    \r\n    onChangePage = (page) =>{\r\n        console.log(Math.ceil(this.state.books.length/pageSize));\r\n        this.setState({\r\n            onPage: page,\r\n        });\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(nextState);\r\n        console.log(this.state);\r\n        if (this.props.match.params.term === nextProps.match.params.term && this.state.books.length === nextState.books.length && nextState.order === this.state.order)\r\n        {\r\n            \r\n            return false;\r\n        }\r\n        else\r\n        {\r\n            if (!topSellerClicked)\r\n            {\r\n                this.retriveResults(nextProps.match.params.term);\r\n            }\r\n            \r\n            return true;\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n    changeState(response) {\r\n        this.setState({\r\n            books: response\r\n        });\r\n    }\r\n   \r\n\r\n   \r\n   \r\n\r\n    DESC(event){\r\n        console.log(event.target.value);\r\n        this.setState({order: event.target.value});\r\n    }\r\n    \r\n    ASC(event){\r\n        console.log(event.target.value);\r\n        this.setState({order: event.target.value});\r\n    }\r\n\r\n    \r\n\r\n    retriveResults(term) {\r\n        API.getAllBooks(term).then(res => this.state.allBooks = res.data).catch(err => alert(\"Search error - \" + err));\r\n        this.state.books = linq.from(this.state.allBooks).where(x => JSON.stringify(x.title).includes(term)).toArray();\r\n    }\r\n\r\n    // topResults(term) {\r\n    //     topSellerClicked = true;\r\n    //     ServerCall(\"topSearchInfo\", term, this.changeState);\r\n    // }\r\n\r\n    returnList() {\r\n        if (this.state.books.length !== 0 && this.state.books !== \"0 results\")\r\n        {\r\n            var bookList = this.state.books.map(function(book, index){\r\n                return <List bookInfo={book} key={index} bookIndex={index}></List>;\r\n              })\r\n    \r\n            return bookList;\r\n        }\r\n    }\r\n\r\n    showNoResults() {\r\n        if (this.state.books.length === 0)\r\n        {\r\n            return <NoResultsContainer>\r\n                    <p>No titles found (0 hits) - Try these tips:</p>\r\n                    <p>Try a different kind of search:</p>\r\n                    <p>Do a browse search by title, typing just the first few letters of the title.</p>\r\n                    <p>Do a browse search by author, typing just the first few letters of the author's first or last name.</p>\r\n                    <p>Do a browse search by genre, typing just the first few letters of the genre</p>\r\n                </NoResultsContainer>;\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n\r\n            <div>\r\n                {this.showNoResults()}\r\n                <button id= \"searchText\" >TOP BOOKS</button>\r\n                \r\n                <ListContainer>\r\n\r\n                    <Pagination class = \"d-flex justify-content-center\"\r\nactivePage={this.state.activePage}\r\ntotalItemsCount={this.state.totalItemsCount}\r\nitemsCountPerPage={this.state.itemsCountPerPage}\r\ntotalItemsCount={this.state.totalItemsCount}\r\npageRangeDisplayed={this.state.pageRangeDisplayed}\r\nonChange={this.handlePageChange}\r\nitemClass='page-item'\r\nlinkClass= 'page-link'\r\ntotal = {this.state.books.length}\r\n                        /> \r\n                    {this.returnList()}\r\n\r\n                    \r\n                </ListContainer>\r\n                <p>ORDER THE BOOKS</p>\r\n            <select defaultValue = {this.state.order} onChange = {this.ASC}>\r\n            <option value ={\"ASC\"} onClick = {this.ASC} >DESCENDING</option>\r\n            <option value ={\"DESC\"}onClick = {this.DESC} >ASCENDING</option>\r\n            </select>\r\n            \r\n            {/* {this.topResults()} */}\r\n            \r\n            <div id=\"listContainer\">\r\n\r\n            <input onFocus={this.setTextBoxListner} \r\n                    id=\"searchText\"  \r\n                    placeholder=\"Author, Genre, Title \"\r\n                    onChange={this.handleSearch}/>\r\n                \r\n                {/* <button id=\"topSearch\"  onClick = {() => this.topResults(this.props.match.params.term)}>Top Sellers</button> */}\r\n           \r\n            </div>\r\n        \r\n          \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default BookList;","import React, { Component } from 'react';\r\n\r\nclass HomePage extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1 font-family=\"Courier New\">Home Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage","import React, { useState } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport { Form, Alert, Button, Container } from \"react-bootstrap\";\r\n\r\nfunction CreateAccountForm() {\r\n    const [error, setError] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function submitHandle(event) {\r\n        event.preventDefault();\r\n        const user = {\r\n            \"firstName\": firstName,\r\n            \"lastName\": lastName,\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"homeAddress\": \"\",\r\n            \"nickname\": \"\"\r\n        };\r\n        API.createAccount(user)\r\n            .then(res => alert(\"Account Created\"))\r\n            .catch(err => AccountCreationError(err));\r\n\r\n    }\r\n\r\n    function AccountCreationError(err) {\r\n        if(err.response && err.response.status === 409){\r\n            setError(true);\r\n        } else {\r\n            alert(\"Account creation error - \" + err);\r\n        }\r\n    }\r\n\r\n        function passwordChangeHandle(event) {\r\n            setPassword(event.currentTarget.value);\r\n        }\r\n\r\n        function emailChangeHandle(event) {\r\n            setEmail(event.currentTarget.value);\r\n        }\r\n\r\n        function firstNameChangeHandle(event) {\r\n            setFirstName(event.currentTarget.value);\r\n        }\r\n\r\n        function lastNameChangeHandle(event) {\r\n            setLastName(event.currentTarget.value);\r\n        }\r\n\r\n        function dismissHandle() {\r\n            setError(false);\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Container style={{ paddingTop: \"20px\" }}>\r\n                    {error ? <Alert dismissable variant=\"danger\" onClose={dismissHandle}>There exists a user with that email address</Alert> : null}\r\n                    <Form onSubmit={e => submitHandle(e)}>\r\n                        <Form.Group controlId=\"CreateAccountForm.firstName\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control type=\"text\" value={firstName} onChange={firstNameChangeHandle} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"CreateAccountForm.lastName\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control type=\"text\" value={lastName} onChange={lastNameChangeHandle} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"CreateAccountForm.email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"foo@bar.com\" value={email} onChange={emailChangeHandle} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"CreateAccountForm.password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" value={password} onChange={passwordChangeHandle} />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\">Register</Button>\r\n                    </Form>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    \r\n}\r\n\r\nexport default CreateAccountForm;","import React, { useState } from 'react';\r\nimport API from '../../utils/API';\r\n\r\n\r\nfunction EditNickname(props) {\r\n    const [userEmail, setUserEmail] = useState(props.email);\r\n    const [userNickname, setUserNickname] = useState(props.nickname);\r\n\r\n    function updateNickname(event){\r\n        setUserNickname(event.target.value);\r\n    }\r\n\r\n    function submitNicknameUpdate(event){\r\n        event.preventDefault();\r\n        const nicknameUpdate = {primaryKeys: {email: userEmail}, updates: {$set: {\"nickname\": userNickname}}};\r\n        API.updateUser(nicknameUpdate)\r\n        .then(() => props.onNicknameUpdate(nicknameUpdate.updates.$set.nickname))\r\n        .catch(err => alert(err));\r\n    }\r\n \r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <b>Edit Nickname</b>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={submitNicknameUpdate}>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col\">\r\n                                <label htmlFor=\"userNickname\">Nickname:</label>\r\n                                <input id=\"userNickname\" className=\"form-control\" type=\"text\" placeholder=\" \" value={userNickname} onChange={updateNickname}/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"btn btn-primary float-right\" type=\"submit\">Save Changes</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default EditNickname;","import React, { useState } from 'react';\r\nimport API from '../../utils/API';\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Edit ALL (first and second name)\r\nfunction EditALL(props) {\r\n    const [userEmail, setUserEmail] = useState(props.email);\r\n    const [officialUserEmail, setOfficialUserEmail] = useState(props.email);\r\n    const [userFirstName, setUserFirstName] = useState(props.firstName);\r\n    const [userLastName, setUserLastName] = useState(props.lastName);\r\n    const [userHomeAddress, setUserHomeAddress] = useState(props.homeAddress);\r\n\r\n    function updateFirstName(event) {\r\n        setUserFirstName(event.target.value);\r\n    }\r\n\r\n    function updateLastName(event) {\r\n        setUserLastName(event.target.value);\r\n    }\r\n\r\n    function updateHomeAddress(event) {\r\n        setUserHomeAddress(event.target.value);\r\n    }\r\n\r\n    function updateUserEmail(event) {\r\n        setUserEmail(event.target.value);\r\n    }\r\n\r\n    function submitALL(event) {\r\n        event.preventDefault();\r\n        if (userEmail !== officialUserEmail) {\r\n            const newUserEmailUpdate = { primaryKeys: { email: officialUserEmail }, updates: { $set: { \"email\": userEmail } } };\r\n            API.updateUserEmail(newUserEmailUpdate).then(() => {\r\n                setOfficialUserEmail(newUserEmailUpdate.updates.$set.email);\r\n\r\n                const newPersonalInfo = {\r\n                    primaryKeys: { email: newUserEmailUpdate.updates.$set.email },\r\n                    updates: {\r\n                        $set: {\r\n                            \"firstName\": userFirstName,\r\n                            \"lastName\": userLastName,\r\n                            \"email\": userEmail,\r\n                            \"homeAddress\": userHomeAddress\r\n                        }\r\n                    }\r\n                };\r\n\r\n                API.updateUser(newPersonalInfo)\r\n                    .then(() => props.onNewPersonalInfo(\r\n                        newPersonalInfo.updates.$set.firstName,\r\n                        newPersonalInfo.updates.$set.lastName,\r\n                        newPersonalInfo.updates.$set.homeAddress))\r\n                    .catch(err => alert(\"Error updating personal info: \" + err));\r\n            }).catch(err => alert(\"Error updating email: \" + err));\r\n        } else {\r\n            const newPersonalInfo = {\r\n                primaryKeys: { email: officialUserEmail },\r\n                updates: {\r\n                    $set: {\r\n                        \"firstName\": userFirstName,\r\n                        \"lastName\": userLastName,\r\n                        \"homeAddress\": userHomeAddress\r\n                    }\r\n                }\r\n            };\r\n\r\n            API.updateUser(newPersonalInfo)\r\n                .then(() => props.onNewPersonalInfo(\r\n                    newPersonalInfo.updates.$set.firstName,\r\n                    newPersonalInfo.updates.$set.lastName,\r\n                    newPersonalInfo.updates.$set.email,\r\n                    newPersonalInfo.updates.$set.homeAddress))\r\n                .catch(err => alert(err));\r\n        }\r\n    }\r\n\r\n    function alphaCheck(event) {\r\n        let alphaNum = /^[^0-9*|/,#-%.?!\":<>[\\]{}`\\\\()';@^&~+_=$]+$/;\r\n        if (!alphaNum.test(event.key)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <b>Edit Personal Information</b>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={submitALL}>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"userFirstName\">First Name:</label>\r\n                            <input id=\"userFirstName\" className=\"form-control\" type=\"text\" placeholder=\"\" value={userFirstName} onKeyPress={alphaCheck} onChange={updateFirstName} />\r\n                        </div>\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"userLastName\">Last Name:</label>\r\n                            <input id=\"userLastName\" className=\"form-control\" type=\"text\" placeholder=\"\" value={userLastName} onKeyPress={alphaCheck} onChange={updateLastName} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"userEmail\">Email:</label>\r\n                        <input id=\"userEmail\" className=\"form-control\" type=\"email\" placeholder=\"\" value={userEmail} onChange={updateUserEmail} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"userAddress\">Address:</label>\r\n                        <input id=\"userAddress\" className=\"form-control\" type=\"text\" placeholder=\" \" value={userHomeAddress} onChange={updateHomeAddress} />\r\n                    </div>\r\n    \r\n    \r\n                    <button className=\"btn btn-primary float-right\" type=\"submit\">Save Changes</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default EditALL;","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button, Container, ListGroup, ButtonGroup, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction ShippingAddressList(props) {\r\n    const [trueAddresses, setTrueAddresses] = useState([]);\r\n    const [addresses, setAddresses] = useState([]);\r\n    const [newAddress, setNewAddress] = useState(\"\");\r\n    const [userEmail] = useState(props.email);\r\n    const [formCheck, setFormCheck] = useState(false);\r\n\r\n    useEffect(() => {\r\n        updateTrueAddresses();\r\n    }, []);\r\n\r\n    useEffect(() => {checkIfEmpty()});\r\n\r\n\r\n\r\n    function checkIfEmpty() {\r\n        if (!newAddress) {\r\n            setFormCheck(false);\r\n        }\r\n        else {\r\n            setFormCheck(true);\r\n        }\r\n    }\r\n\r\n    function updateTrueAddresses() {\r\n        API.getShippingAddressesByUser({ email: userEmail })\r\n            .then(res => {\r\n                setTrueAddresses(res.data);\r\n                setAddresses(res.data);\r\n                console.log(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    function updateAddress(newAddress, index) {\r\n        let newAddresses = addresses;\r\n        newAddresses[index] = { email: userEmail, address: newAddress };\r\n        setAddresses(newAddresses);\r\n    }\r\n\r\n    function deleteHandle(index) {\r\n        API.deleteShippingAddress(addresses[index]).then(res => {\r\n            updateTrueAddresses();\r\n            // window.location.reload();\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    function editHandle(index) {\r\n        const shippingAddressUpdate = {\r\n            primaryKeys: { email: userEmail, address: trueAddresses[index].addresses },\r\n            updates: { $set: { \"address\": addresses[index].address } }\r\n        };\r\n        API.updateShippingAddress(shippingAddressUpdate).then(() => {\r\n            updateTrueAddresses();\r\n            alert(\"Shipping Address updated!\");\r\n        }).catch(err => { console.log(\"Error updating shipping address: \" + err) })\r\n    }\r\n\r\n    function addressChangeHandle(event) {\r\n        setNewAddress(event.currentTarget.value);\r\n    }\r\n\r\n    function addHandle(event) {\r\n        event.preventDefault();\r\n        API.addShippingAddress({ email: userEmail, address: newAddress })\r\n            .then(() => {\r\n                updateTrueAddresses();\r\n                setNewAddress(\"\");\r\n                // window.location.reload();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                {addresses.map((address, index) => (\r\n                    <ListGroup key={index}>\r\n                        <ListGroup.Item key={index}>\r\n                            <input type=\"text\" placeholder={address.address} onChange={(event) => { updateAddress(event.target.value, index) }} />\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Button onClick={() => editHandle(index)}>Save Changes</Button>\r\n                                <Button onClick={() => deleteHandle(index)} variant=\"danger\">Delete</Button>\r\n                            </ButtonGroup>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                ))}\r\n            </Card>\r\n            <Form onSubmit={addHandle}>\r\n                <Form.Group>\r\n                    <Form.Label>Address:</Form.Label>\r\n                    <Form.Control placeholder=\"182 Main St\" value={newAddress} onChange={addressChangeHandle} />\r\n                </Form.Group>\r\n                <Button className=\"float-right\" type=\"submit\" variant=\"primary\" disabled={!formCheck}>Add address</Button>\r\n            </Form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ShippingAddressList;","import React, { useEffect, useState } from 'react';\r\nimport API from '../../utils/API';\r\nimport ShippingAddressList from './ShippingAddressList';\r\nimport { Card, Form, Button } from 'react-bootstrap';\r\n\r\n\r\nconst EditShippingAddresses = (props) => {\r\n    const [email] = useState(props.email);\r\n    \r\n    return (\r\n    <Card>\r\n      <Card.Header>\r\n        <b>Edit Shipping Addresses</b>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <ShippingAddressList email={email}/>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n    \r\n   \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n\r\nexport default EditShippingAddresses;","import React, {useState, useEffect} from \"react\";\r\nimport {Card, Col, Button, ListGroup, ButtonGroup, Form} from \"react-bootstrap\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction CreditCardsList(props) {\r\n    const [userEmail]  = useState(props.email);\r\n    const [trueCreditCards, setTrueCreditCards] = useState([]);\r\n    const [creditCards, setCreditCards] = useState([]);    \r\n    const [creditCardNumber, setCreditCardNumber] = useState(\"\");\r\n    const [CVV, setCVV] = useState(\"\");\r\n    const [expirationMonth, setExpirationMonth] = useState(\"January\");\r\n    const [expirationYear, setExpirationYear] = useState(\"\");\r\n    const [formCheck, setFormCheck] = useState(false);\r\n\r\n    useEffect(() => {\r\n        updateTrueCreditCards();\r\n    }, []);\r\n\r\n    useEffect(() => {checkIfEmpty()});\r\n\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        function checkLength(event) {\r\n            let inString = event.currentTarget.value;\r\n            let inChar = (inString).charCodeAt(inString.length-1);\r\n    \r\n            if (inChar < 48 || inChar > 57) {\r\n                event.currentTarget.value = inString.slice(0, inString.length-1);\r\n            }\r\n    \r\n            if (inString.length > event.currentTarget.maxLength) {\r\n                event.currentTarget.value = inString.slice(0, event.currentTarget.maxLength);\r\n            }\r\n        }\r\n    \r\n        function checkIfEmpty() {\r\n            if (!creditCardNumber || !expirationYear || !CVV) {\r\n                setFormCheck(false);\r\n            }\r\n            else if (creditCardNumber.length < 1 || expirationYear.length < 1 || CVV.length < 1) {\r\n                setFormCheck(false);\r\n            }\r\n            else {\r\n                setFormCheck(true);\r\n            }\r\n        }\r\n\r\n\r\n    function updateTrueCreditCards() {\r\n        API.getCreditCardsByUser({email: userEmail})\r\n            .then(res => {\r\n                setTrueCreditCards(res.data);\r\n                setCreditCards(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    function updateCreditCardNumber(event) {\r\n        setCreditCardNumber(event.target.value);\r\n    }\r\n\r\n    function updateCVV(event) {\r\n        setCVV(event.target.value);\r\n    }\r\n\r\n    function updateExpirationMonth(event) {\r\n        setExpirationMonth(event.target.value);\r\n    }\r\n\r\n    function updateExpirationYear(event) {\r\n        setExpirationYear(event.target.value);\r\n    }\r\n\r\n    function editCreditCardExpMonthHandle(month, index) {\r\n        let newCreditCard = creditCards[index];\r\n        newCreditCard.expirationMonth = month;\r\n\r\n        let newCreditCards = creditCards;\r\n        newCreditCards[index] = newCreditCard;\r\n        setCreditCards(newCreditCards);\r\n    }\r\n\r\n    function editCreditCardExpYearHandle(year, index) {\r\n        let newCreditCard = creditCards[index];\r\n        newCreditCard.expirationYear = year;\r\n\r\n        let newCreditCards = creditCards;\r\n        newCreditCards[index] = newCreditCard;\r\n        setCreditCards(newCreditCards);\r\n    }\r\n\r\n    function editCreditCardCVVHandle(cvv, index) {\r\n        let newCreditCard = creditCards[index];\r\n        newCreditCard.cvv = cvv;\r\n\r\n        let newCreditCards = creditCards;\r\n        newCreditCards[index] = newCreditCard;\r\n        setCreditCards(newCreditCards);\r\n    }\r\n\r\n    function editCreditCardCCNHandle(ccn, index) {\r\n        let newCreditCard = creditCards[index];\r\n        newCreditCard.creditCardNum = ccn;\r\n\r\n        let newCreditCards = creditCards;\r\n        newCreditCards[index] = newCreditCard;\r\n        setCreditCards(newCreditCards);\r\n    }\r\n\r\n    function deleteHandle(index) {\r\n        API.removeCreditCard(trueCreditCards[index]).then(() =>{\r\n            updateTrueCreditCards();\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    function editHandle(index) {\r\n        const creditCardUpdate = {\r\n            primaryKeys: {email: userEmail, creditCardNum: trueCreditCards[index].creditCardNumber},\r\n            updates: {$set: {\"creditCardNum\": creditCards[index].creditCardNum,\r\n                    \"cvv\": creditCards[index].cvv,\r\n                    \"expirationYear\": creditCards[index].expirationYear,\r\n                    \"expirationMonth\": creditCards[index].expirationMonth}}};\r\n        API.updateCreditCard(creditCardUpdate).then(() => {\r\n            updateTrueCreditCards();\r\n            alert(\"Credit Card updated!\");\r\n        }).catch(err => {console.log(\"Error updating credit card: \" + err)})\r\n    }\r\n\r\n    function addHandle(event) {\r\n        event.preventDefault();\r\n        API.addCreditCard({ \r\n            email: userEmail,\r\n            creditCardNum: creditCardNumber,\r\n            expirationMonth: expirationMonth,\r\n            expirationYear: expirationYear,\r\n            cvv: CVV })\r\n            .then(() => {\r\n                updateTrueCreditCards();\r\n                setCreditCardNumber(\"\");\r\n                setCVV(\"\");\r\n                setExpirationMonth(\"\");\r\n                setExpirationYear(\"\");\r\n                // window.location.reload();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                {creditCards.map((creditCard, index) => (\r\n                    <ListGroup key={index}>\r\n                        <ListGroup.Item key={index}>\r\n                        <Form.Group controlId=\"EditProfileComponent.creditCardNumber\">\r\n                                <Form.Label> Credit Card Number</Form.Label>\r\n                                <Form.Control type=\"text\" maxLength=\"16\" onInput={checkLength} placeholder={creditCard.creditCardNum} onChange={(event) => {editCreditCardCCNHandle(event.target.value, index)}}/>\r\n                            </Form.Group>\r\n                            <Form.Label> Expiration Date</Form.Label>\r\n                            <Form.Row controlId=\"EditProfileComponent.expirationDate\">\r\n                                <Form.Group as={Col} md=\"4\">\r\n                                    <Form.Control as=\"select\" placeholder={creditCard.expirationMonth} onChange={(event) => {editCreditCardExpMonthHandle(event.target.value, index)}}>\r\n                                        {months.map((month) => {\r\n                                            return <option>{month}</option>;\r\n                                        })}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} md=\"4\">\r\n                                    <Form.Control type=\"text\" maxLength=\"4\" onInput={checkLength} placeholder={creditCard.expirationYear} onChange={(event) => {editCreditCardExpYearHandle(event.target.value, index)}}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Group controlId=\"EditProfileComponent.CVV\">\r\n                                <Form.Label> Security Code</Form.Label>\r\n                                <Form.Control style={{ width: \"25%\" }} type=\"text\" maxLength=\"3\" onInput={checkLength}  onChange={(event) => {editCreditCardCVVHandle(event.target.value, index)}} placeholder={creditCard.cvv}/>\r\n                            </Form.Group>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Button onClick={() => editHandle(index)}>Save Changes</Button>\r\n                                <Button onClick={() => deleteHandle(index)} variant=\"danger\">Delete</Button>\r\n                            </ButtonGroup>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                ))}\r\n            </Card>\r\n            <Form onSubmit={addHandle}>\r\n            <div className=\"card-header\">\r\n                <b>New Credit Card</b>\r\n            </div>\r\n            <Card>\r\n            <Form.Group controlId=\"EditProfileComponent.creditCardNumber\">\r\n                    <Form.Label> Credit Card Number</Form.Label>\r\n                    <Form.Control type=\"text\" maxLength=\"16\" onInput={checkLength} value={creditCardNumber} onChange={updateCreditCardNumber}/>\r\n                </Form.Group>\r\n                <Form.Label> Expiration Date</Form.Label>\r\n                <Form.Row controlId=\"EditProfileComponent.expirationDate\">\r\n                    <Form.Group as={Col} md=\"4\">\r\n                        <Form.Control as=\"select\" value={expirationMonth} onChange={updateExpirationMonth}>\r\n                            {months.map((month) => {\r\n                                return <option>{month}</option>;\r\n                            })}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"4\">\r\n                        <Form.Control type=\"text\" maxLength=\"4\" onInput={checkLength} value={expirationYear} onChange={updateExpirationYear} placeholder=\"Year\"/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group controlId=\"EditProfileComponent.CVV\">\r\n                    <Form.Label> Security Code</Form.Label>\r\n                    <Form.Control style={{ width: \"25%\" }} type=\"text\" maxLength=\"3\" onInput={checkLength} value={CVV} onChange={updateCVV} placeholder=\"CVV\"/>\r\n                    <Button className=\"float-right\" type=\"submit\" disabled={!formCheck}>Add credit card</Button>\r\n                </Form.Group>\r\n                </Card>\r\n                \r\n            </Form>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default CreditCardsList; ","import React, { useState, useEffect } from 'react';\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\nimport CreditCardsList from \"./CreditCardsList\"\r\n\r\n\r\nfunction EditCreditCards(props) {\r\n    const [userEmail, setUserEmail] = useState(props.email);\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <b>Edit Credit Cards</b>\r\n            </div>\r\n            <CreditCardsList email={userEmail}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditCreditCards;","import React, { useState, useRef, useEffect} from \"react\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { Grid, Col, Spinner} from \"react-bootstrap\";\r\nimport EditNickname from \"./EditNickname\";\r\nimport EditPersonalInfo from \"../profilemanagement/EditPersonalInfo\";\r\nimport EditShippingAddresses from \"./EditShippingAddresses\";\r\nimport EditCreditCards from \"./EditCreditCards\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction EditProfileComponent(props) {\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [email, setEmail] = useState(props.userEmail);\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [homeAddress, setHomeAddress] = useState(\"\");\r\n    const [renderChildren, setRenderChildren] = useState(false);\r\n\r\n    useEffect(() => {\r\n        API.getUser({ email: email }).then(res => {\r\n            setNickname(res.data.nickname);\r\n            setFirstName(res.data.firstName);\r\n            setLastName(res.data.lastName);\r\n            setHomeAddress(res.data.homeAddress);\r\n            setRenderChildren(true);\r\n        })\r\n    }, []);\r\n\r\n\r\n    function setPersonalInfo(newFirstName, newLastName, newEmail, newHomeAddress){\r\n        setFirstName(newFirstName);\r\n        setLastName(newLastName);\r\n        setEmail(newEmail);\r\n        setHomeAddress(newHomeAddress);\r\n    \r\n        alert(\"Personal Information Updated!\")\r\n    }\r\n\r\n    function newNicknameHandle(newNickname){\r\n        setNickname(newNickname);\r\n\r\n        alert(\"Nickname Updated!\");\r\n    }\r\n\r\n\r\n    function getUserDetails(){\r\n        return {\r\n            nickname: nickname,\r\n            email: email,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            homeAddress: homeAddress\r\n        };\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container style={{ paddingTop: \"20px\" }}>\r\n            {renderChildren ?\r\n                    <React.Fragment>\r\n                        <EditNickname nickname={nickname} email={email} onNicknameUpdate={newNicknameHandle} />\r\n                        <EditPersonalInfo firstName={firstName} lastName={lastName} email={email} homeAddress={homeAddress} onNewPersonalInfo={setPersonalInfo} />\r\n                        <EditShippingAddresses email={email} />\r\n                        <EditCreditCards email={email}/>\r\n                    </React.Fragment>\r\n                    : <Spinner animation=\"border\" variant=\"primary\" />}\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EditProfileComponent;","import React, { useState } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport { Form, Alert, Button, Container } from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nfunction LoginForm(props) {\r\n    const [loginFailed, setLoginFailed] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    function loginHandle(event) {\r\n        event.preventDefault();\r\n        const credentials = {\r\n            \"email\": email,\r\n            \"password\": password\r\n        };\r\n        API.login(credentials)\r\n            .then(res => loginResponseHandle(res, credentials.email))\r\n            .catch(err => loginErrorHandle(err));\r\n    }\r\n\r\n    function loginErrorHandle(err) {\r\n        if(err.response && err.response.status === 401) {\r\n            setLoginFailed(true);\r\n        } else {\r\n            alert(\"Login error - \" + err);\r\n        }\r\n    }\r\n\r\n    function loginResponseHandle(response, email) {\r\n        localStorage.setItem(\"auth_token\", response.data);\r\n        API.getUser({email: email})\r\n        .then(res => {\r\n            setRedirect(true);\r\n            props.handleAuth(true);\r\n        })\r\n        .catch(err => alert(\"Login error - \" + err));\r\n    }\r\n\r\n    function passwordChangeHandle(event) {\r\n        setPassword(event.currentTarget.value);\r\n    }\r\n\r\n    function emailChangeHandle(event) {\r\n        setEmail(event.currentTarget.value);\r\n    }\r\n\r\n    function dismissHandle() {\r\n        setLoginFailed(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {redirect? <Redirect to=\"/\"/>: null}\r\n            <Container style={{ paddingTop: \"20px\" }}>\r\n                {loginFailed ? <Alert dismissable variant=\"danger\" onClose={dismissHandle}>Incorrect Email or Password</Alert> : null}\r\n                <Form inline onSubmit={e => loginHandle(e)}>\r\n                    <Form.Group controlId=\"LoginForm.email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"foo@bar.com\" value={email} onChange={emailChangeHandle} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"LoginForm.password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" value={password} onChange={passwordChangeHandle} />\r\n                    </Form.Group>\r\n                    <Button type=\"Submit\">Login</Button>\r\n                </Form>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import decode from 'jwt-decode';\r\nexport default {\r\n    isAuthenticated: function(){\r\n        const token = localStorage.getItem(\"auth_token\");\r\n        if(token){\r\n            return !!token && !this.isTokenExpired(token)\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    },\r\n    isTokenExpired: function(token) {\r\n        try {\r\n            const decoded = decode(token,  {header: true });\r\n            return decoded.exp < Date.now() / 1000;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    },\r\n    getProfile: function() {\r\n        // Using jwt-decode npm package to decode the token\r\n        return decode(localStorage.getItem(\"auth_token\"));\r\n    },\r\n} ","import React, { Component, useState, useEffect } from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport LoginForm from \"./profilemanagement/LoginForm\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../utils/AuthService\";\r\nimport API from \"../utils/API\"\r\n\r\nconst NavibarComponent = () => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [authenticated, setAuthenticated] = useState(AuthService.isAuthenticated());\r\n\r\n    function logout(){\r\n        localStorage.removeItem(\"auth_token\");\r\n        setAuthenticated(false);\r\n        setRedirect(true);\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"primary\" expand=\"lg\">\r\n            {redirect? <Redirect to=\"/register/\"/>: null}\r\n            {!authenticated ? <LoginForm handleAuth={setAuthenticated}/> :\r\n            <React.Fragment>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                        Menu\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item as={Link} to=\"/editProfile\">Edit Profile</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item onClick={logout}>Logout</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                       \r\n                        </Dropdown>\r\n                        <b>Hello! {AuthService.getProfile().username}</b>\r\n                        </React.Fragment>}\r\n        </Navbar>\r\n    );\r\n}\r\n        \r\n              \r\n    \r\n\r\n\r\nexport default NavibarComponent;","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../utils/AuthService\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          AuthService.isAuthenticated() ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/register\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  export default PrivateRoute; ","import React, { useState } from \"react\";\r\nimport CreateAccountForm from './components/profilemanagement/CreateAccountForm';\r\nimport EditProfileComponent from \"./components/profilemanagement/EditProfileComponent\";\r\nimport NavibarComponent from \"./components/NavibarComponent\";\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport Auth from \"./utils/AuthService\"\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\nfunction Profile() {\r\n\r\n  const[userDetails, setUserDetails] = useState(null);\r\n  \r\n\r\n  function setUserDetailsHandle(user){\r\n    setUserDetails(user);    \r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <NavibarComponent/>\r\n      <Route path=\"/register\" component={CreateAccountForm}/>\r\n      <PrivateRoute path=\"/editProfile\" component={() => <EditProfileComponent userEmail={Auth.getProfile().username}/>}/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react'; //server related\r\nimport { Pagination, PaginationItem, PaginationLink, Media } from 'react-bootstrap'; //pagination library\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nfunction ShopCartPagination()\r\n{\r\n    return (\r\n        <>\r\n          <div className=\"shopcart-pagination\">\r\n          <Pagination aria-label=\"Page navigation\">\r\n      \r\n          <Pagination.First />\r\n          <Pagination.Prev />\r\n          <Pagination.Item>{1}</Pagination.Item>\r\n          <Pagination.Ellipsis />\r\n          <Pagination.Item>{10}</Pagination.Item>\r\n          <Pagination.Item active>{11}</Pagination.Item>\r\n          <Pagination.Item disabled>{12}</Pagination.Item>\r\n          <Pagination.Next disabled />\r\n          <Pagination.Last disabled />\r\n          </Pagination>\r\n          </div>\r\n      </>\r\n      ); \r\n}\r\n\r\nexport default ShopCartPagination;","import React, { Component } from 'react'; //server related\r\nimport { Pagination, PaginationItem, PaginationLink, Media } from 'react-bootstrap'; //pagination library\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport './ShoppingCart.css';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n//import ShopCartList from './components/ShopCartList';\r\nimport ShopCartPagination from './components/ShopCartPagination';\r\nimport axios from 'axios';\r\nimport API from \"./utils/API\";\r\n\r\n\r\nfunction oneItemCreator(item, index) {\r\n  return (\r\n  <>\r\n        <ListGroup.Item>\r\n          <Media>\r\n            <img\r\n              width={64}\r\n              height={64}\r\n              src=\"https://thenypost.files.wordpress.com/2015/07/to_kill_a_mockingbird.jpg\" \r\n            />\r\n            <Media.Body>\r\n              {item}\r\n              </Media.Body>  \r\n            </Media>\r\n          </ListGroup.Item>\r\n  </>\r\n  )\r\n\r\n}\r\n\r\n//currently in here, just try running this once before rendering and we good\r\nfunction loadDbInfo() {\r\n  var data = [\"\"];\r\n  API.displayAll(data)\r\n  .then(res => data.forEach(oneItemCreator))\r\n  .catch(err => \"Error\");\r\n\r\n}\r\n\r\nclass ShoppingCart extends Component {\r\n  \r\n\r\n  //bind any other function\r\n  // this.componentDidMount = this.componentDidMount.bind(this);\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      name: '',\r\n      description: '',\r\n      bookID: 0,\r\n      info: []\r\n    };\r\n\r\n  } \r\n    \r\n  \r\n  //does nothing at the moment, following tutorials\r\n    async componentDidMount() {\r\n      const {data} = await axios.get(\"/api/ShoppingCart/displayAll\").then(res => {\r\n        this.setState({\r\n          email: data.email,\r\n          name: data.name,\r\n          description: data.description,\r\n          bookID: data.bookID,\r\n          info: ['test info']\r\n        })\r\n\r\n      })\r\n    }\r\n  \r\n    //display functions\r\n    /*\r\n    oneItemCreator(item, index) {\r\n      return (\r\n      <>\r\n            <ListGroup.Item>\r\n              <Media>\r\n                <img\r\n                  width={64}\r\n                  height={64}\r\n                  src=\"./logo.svg\" \r\n                />\r\n                <Media.Body>\r\n                  {item}\r\n                  </Media.Body>  \r\n                </Media>\r\n              </ListGroup.Item>\r\n      </>\r\n      )\r\n    \r\n    }\r\n    */\r\n\r\n    oneItemCreatorStatic() {\r\n      return (\r\n      <>\r\n            <ListGroup.Item>\r\n              <Media>\r\n                <img\r\n                  width={64}\r\n                  height={64}\r\n                  src=\"https://thenypost.files.wordpress.com/2015/07/to_kill_a_mockingbird.jpg\" \r\n                />\r\n                <Media.Body>\r\n                  <h2>Heading item 1 dynamic</h2>\r\n                  <p>Description item here</p>\r\n                  </Media.Body>  \r\n                </Media>\r\n              </ListGroup.Item>\r\n      </>\r\n      )\r\n    \r\n    }\r\n\r\n    oneItemCreatorSample() {\r\n      return (\r\n      <>\r\n            <ListGroup.Item>\r\n              <Media>\r\n                <img\r\n                  width={64}\r\n                  height={64}\r\n                  src=\"https://thenypost.files.wordpress.com/2015/07/to_kill_a_mockingbird.jpg\" \r\n                />\r\n                <Media.Body>\r\n                  <h2>To Kill a Mockingbird</h2>\r\n                  <p>To Kill a Mockingbird is a novel by Harper Lee published in 1960...</p>\r\n                  </Media.Body>  \r\n                </Media>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n              <Media>\r\n                <img\r\n                  width={64}\r\n                  height={64}\r\n                  src=\"https://media.bloomsbury.com/rep/bj/9781408827765.jpg\" \r\n                />\r\n                <Media.Body>\r\n                  <h2>One Thousand and One Nights</h2>\r\n                  <p>One Thousand and One Nights is a collection of Middle Eastern fol...</p>\r\n                  </Media.Body>  \r\n                </Media>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n              <Media>\r\n                <img\r\n                  width={64}\r\n                  height={64}\r\n                  src=\"https://upload.wikimedia.org/wikipedia/en/0/01/OfMiceAndMen.jpg\" \r\n                />\r\n                <Media.Body>\r\n                  <h2>Of Mice and Men</h2>\r\n                  <p>Of Mice and Men is a novella written by John Steinbeck. Publish...</p>\r\n                  </Media.Body>  \r\n                </Media>\r\n              </ListGroup.Item>\r\n      </>\r\n      )\r\n    \r\n    }\r\n\r\n\r\n    ShopCartList() {\r\n    \r\n      // ShoppingCart.test does nothing\r\n      return(\r\n        <>\r\n        <div>\r\n          <ListGroup>\r\n            {this.oneItemCreatorSample()}\r\n          </ListGroup>\r\n        </div>\r\n        <div>\r\n          </div>\r\n      </>\r\n      );\r\n    }\r\n\r\n    /*.map returns something from each element in the array, put this inside the react fragment below\r\n    {\r\n    this.state.info.map(function(ShopCart){\r\n               return <option\r\n               key={info}\r\n               value={info}>{info}\r\n               </option>;\r\n    }\r\n    */\r\n    render()\r\n    {\r\n        \r\n      return (\r\n         \r\n         <React.Fragment>\r\n           {this.ShopCartList()}\r\n            <ShopCartPagination></ShopCartPagination>\r\n          </React.Fragment>\r\n         \r\n      );\r\n    };\r\n      \r\n  } export default ShoppingCart;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Tab extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: {\r\n        activeTab,\r\n        label,\r\n      },\r\n    } = this;\r\n\r\n    let className = 'tab-list-item';\r\n\r\n    if (activeTab === label) {\r\n      className += ' tab-list-active';\r\n    }\r\n\r\n    return (\r\n      <li\r\n        className={className}\r\n        onClick={onClick}\r\n      >\r\n        {label}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;","import React, { useState } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Form, Alert, Button, Container, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, FormGroup, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, ListGroup, ListGroupItem, Badge, UncontrolledCollapse } from \"reactstrap\";\r\n\r\nconst WishList = (props) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle2 = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  const {\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const [unmountOnClose, setUnmountOnClose] = useState(true);\r\n\r\n    const toggle = () => setModal(!modal);\r\n    const changeUnmountOnClose = e => {\r\n        let value = e.target.value;\r\n        setUnmountOnClose(JSON.parse(value));\r\n\r\n  }\r\n\r\n  return(\r\n\r\n    <div className=\"ShoppingListMain\" style = {{paddingLeft: \"100px\", paddingTop: \"100px\"}}>\r\n\r\n    <h1 style ={{marginBottom: \"0px\"}}>Book Wish List</h1>\r\n    <p>Add a book to an existing Wish List or create a new list </p>\r\n        <div className=\"header\">\r\n        <Form inline>\r\n      <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n        <Input type=\"form\" placeholder=\"Enter the name of a book\" />\r\n      </FormGroup>\r\n      <Dropdown isOpen={dropdownOpen} toggle={toggle2} size = \"sm\">\r\n      <DropdownToggle caret>\r\n          Add\r\n      </DropdownToggle>\r\n      <DropdownMenu>\r\n        <DropdownItem header>Your Lists</DropdownItem>\r\n        <DropdownItem divider />\r\n          <DropdownItem>Fiction</DropdownItem>\r\n             <DropdownItem>Horror</DropdownItem>\r\n             <DropdownItem>Self-Help</DropdownItem>\r\n             <DropdownItem>Biography</DropdownItem>\r\n             <DropdownItem divider />\r\n             <DropdownItem onClick = {toggle}>New List</DropdownItem>\r\n           </DropdownMenu>\r\n         </Dropdown>\r\n    </Form>\r\n\r\n\r\n\r\n\r\n\r\n          <a href =\"#\" id = \"toggler\" style = {{paddingLeft: \"5px\", paddingTop: \"10px\"}}>View Lists</a>\r\n        </div>\r\n\r\n        <div>\r\n\r\n            <Modal isOpen={modal} toggle={toggle} className={className} unmountOnClose={unmountOnClose}>\r\n                <ModalHeader toggle={toggle}>Create a new List</ModalHeader>\r\n                <ModalBody>\r\n                    <Input type=\"textform\"/>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={toggle}>Create List</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n                </Modal>\r\n\r\n        </div>\r\n\r\n\r\n        <div>\r\n        <UncontrolledCollapse toggler = \"#toggler\">\r\n          <ListGroup flush style = {{marginRight: \"75%\"}}>\r\n            <ListGroupItem tag = \"a\" href = \"#\" id=\"toggle-fiction\">Fiction<Badge pill style = {{marginLeft: \"2%\"}}>6</Badge></ListGroupItem>\r\n              <UncontrolledCollapse toggler = \"#toggle-fiction\">\r\n\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\", marginTop: \"2%\"}}>Of Mice and Men</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Maximum Ride</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Game of Thrones</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>God is Dead</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Epitomes of Conviction</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"2%\"}}>Hell Buried</p>\r\n\r\n              </UncontrolledCollapse>\r\n            <ListGroupItem tag = \"a\" href = \"#\" id = \"toggle-horror\">Horror<Badge pill style = {{marginLeft: \"2%\"}}>3</Badge></ListGroupItem>\r\n\r\n              <UncontrolledCollapse toggler = \"#toggle-horror\">\r\n\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\", marginTop: \"2%\"}}>The Shining</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Scratches</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"2%\"}}>The Hostile Hospital</p>\r\n\r\n\r\n              </UncontrolledCollapse>\r\n            <ListGroupItem tag = \"a\" href = \"#\" id = \"toggle-SH\">Self-Help<Badge pill style = {{marginLeft: \"2%\"}}>1</Badge></ListGroupItem>\r\n              <UncontrolledCollapse toggler = \"#toggle-SH\">\r\n\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"2%\", marginTop: \"2%\"}}>How To Be A Badass</p>\r\n\r\n\r\n\r\n              </UncontrolledCollapse>\r\n            <ListGroupItem tag = \"a\" href = \"#\" id = \"toggle-bio\">Biography<Badge pill style = {{marginLeft: \"2%\"}}>5</Badge></ListGroupItem>\r\n\r\n            <UncontrolledCollapse toggler = \"#toggle-bio\">\r\n\r\n                <p style = {{marginLeft: \"10%\", marginBottom: \"0px\", marginTop: \"2%\"}}>Slash: A Rockstars Guide to Life</p>\r\n                <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Some Book About Oprah</p>\r\n                <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Morgan Freeman Has A Cool Voice: Heres Why</p>\r\n                <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Obama? Obama.</p>\r\n                <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>A Day In The Life of a Wendy's Employee</p>\r\n\r\n            </UncontrolledCollapse>\r\n\r\n          </ListGroup>\r\n          </UncontrolledCollapse>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n  )\r\n}\r\nexport default WishList;\r\n","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n    faStar\r\n);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\nimport '../fontawesome';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass StarRatingComponent extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.number,\r\n    editing: PropTypes.bool,\r\n    starCount: PropTypes.number,\r\n    starColor: PropTypes.string,\r\n    onStarClick: PropTypes.func,\r\n    onStarHover: PropTypes.func,\r\n    onStarHoverOut: PropTypes.func,\r\n    renderStarIcon: PropTypes.func,\r\n    renderStarIconHalf: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    starCount: 5,\r\n    editing: true,\r\n    starColor: 'yellow',\r\n    emptyStarColor: 'grey'\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      value: props.value\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { value } = nextProps;\r\n\r\n    if (value != null && (value !== this.state.value)) {\r\n      this.setState({ value });\r\n    }\r\n  }\r\n\r\n  onChange(inputValue) {\r\n    const { editing, value } = this.props;\r\n\r\n    if (!editing) {\r\n      return;\r\n    }\r\n\r\n    if (value != null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({value: inputValue});\r\n  }\r\n\r\n  onStarClick(index, value, name, e) {\r\n    e.stopPropagation();\r\n\r\n    const { onStarClick, editing } = this.props;\r\n\r\n    if (!editing) {\r\n      return;\r\n    }\r\n\r\n    onStarClick && onStarClick(index, value, name, e);\r\n  }\r\n\r\n  onStarHover(index, value, name, e) {\r\n    e.stopPropagation();\r\n\r\n    const { onStarHover, editing } = this.props;\r\n\r\n    if (!editing) {\r\n      return;\r\n    }\r\n\r\n    onStarHover && onStarHover(index, value, name, e);\r\n  }\r\n\r\n  onStarHoverOut(index, value, name, e) {\r\n    e.stopPropagation();\r\n\r\n    const { onStarHoverOut, editing } = this.props;\r\n\r\n    if (!editing) {\r\n      return;\r\n    }\r\n\r\n    onStarHoverOut && onStarHoverOut(index, value, name, e);\r\n  }\r\n\r\n  renderStars() {\r\n    const {\r\n      name,\r\n      starCount,\r\n      starColor,\r\n      emptyStarColor,\r\n      editing\r\n    } = this.props;\r\n    const { value } = this.state;\r\n\r\n    const starStyles = (i, value) => ({\r\n      float: 'right',\r\n      cursor: editing ? 'pointer' : 'default',\r\n      color: value >= i ? starColor : emptyStarColor\r\n    });\r\n    const radioStyles = {\r\n      display: 'none',\r\n      position: 'absolute',\r\n      marginLeft: -9999\r\n    };\r\n\r\n    let starNodes = [];\r\n\r\n    for (let i = starCount; i > 0; i--) {\r\n      const id = `${name}_${i}`;\r\n      const starNodeInput = (\r\n        <input\r\n          key={`input_${id}`}\r\n          style={radioStyles}\r\n          className=\"dv-star-rating-input\"\r\n          type=\"radio\"\r\n          name={name}\r\n          id={id}\r\n          value={i}\r\n          checked={value === i}\r\n          onChange={this.onChange.bind(this, i, name)}\r\n        />\r\n      );\r\n      const starNodeLabel = (\r\n        <label\r\n          key={`label_${id}`}\r\n          style={starStyles(i, value)}\r\n          className={'dv-star-rating-star ' + (value >= i ? 'dv-star-rating-full-star' : 'dv-star-rating-empty-star')}\r\n          htmlFor={id}\r\n          onClick={e => this.onStarClick(i, value, name, e)}\r\n          onMouseOver={e => this.onStarHover(i, value, name, e)}\r\n          onMouseLeave={e => this.onStarHoverOut(i, value, name, e)}\r\n        >\r\n          {this.renderIcon(i, value, name, id)}\r\n        </label>\r\n      );\r\n\r\n      starNodes.push(starNodeInput);\r\n      starNodes.push(starNodeLabel);\r\n    }\r\n\r\n    return starNodes.length ? starNodes : null;\r\n  }\r\n\r\n  renderIcon(index, value, name, id) {\r\n    const { renderStarIcon, renderStarIconHalf } = this.props;\r\n\r\n    if (\r\n      typeof renderStarIconHalf === 'function' &&\r\n      Math.ceil(value) === index &&\r\n      value % 1 !== 0\r\n    ) {\r\n      return renderStarIconHalf(index, value, name, id);\r\n    }\r\n\r\n    if (typeof renderStarIcon === 'function') {\r\n      return renderStarIcon(index, value, name, id);\r\n    }\r\n\r\n    return <FontAwesomeIcon key={`icon_${id}`} icon={faStar} size='2x'/>\r\n  }\r\n\r\n  render() {\r\n    const { editing, className } = this.props;\r\n    const classes = cx('dv-star-rating', {\r\n      'dv-star-rating-non-editable': !editing\r\n    }, className);\r\n\r\n    return (\r\n      <div style={{display: 'inline-block', position: 'relative'}} className={classes}>\r\n        {this.renderStars()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StarRatingComponent;","import React from \"react\";\r\n\r\nexport default function Comment(props) {\r\n  const { name, message, time } = props.comment;\r\n\r\n  return (\r\n\r\n      <div className=\"media-body p-2 shadow-sm rounded bg-light border\">\r\n        <small className=\"float-right text-muted\">{time}</small>\r\n        <h6 className=\"mt-0 mb-1 text-muted\">{name}</h6>\r\n        {message}\r\n      </div>\r\n  );\r\n}","\r\nimport React from \"react\";\r\nimport CommentComponent from \"./CommentComponent\";\r\n\r\nexport default function CommentList(props) {\r\n  return (\r\n    <div className=\"commentList\">\r\n      <h5 className=\"text-muted mb-4\">\r\n        <span>{props.comments.length}</span>{\" \"}\r\n        Comment{props.comments.length !== 1 ? \"s\" : \"\"}\r\n      </h5>\r\n\r\n      {props.comments.length === 0 && !props.loading ? (\r\n        <div style={{width: '350px'}} className=\"alert text-center alert-info\">\r\n          Be the first to comment\r\n        </div>\r\n      ) : null}\r\n\r\n      {props.comments.map((comment, index) => (\r\n        <CommentComponent key={index} comment={comment} />\r\n      ))}\r\n    </div>\r\n  );\r\n}","  \r\nimport React, { Component } from \"react\";\r\n\r\nexport default class CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      error: \"\",\r\n\r\n      comment: {\r\n        name: \"\",\r\n        message: \"\"\r\n      }\r\n    };\r\n\r\n    this.handleFieldChange = this.handleFieldChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleFieldChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      comment: {\r\n        ...this.state.comment,\r\n        [name]: value\r\n      }\r\n    });\r\n  };\r\n\r\n  goAnonymous = event => {\r\n    console.log('Anonymous');\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.comment.name);\r\n    console.log(this.state.comment.message);\r\n\r\n    if (!this.isFormValid()) {\r\n      this.setState({ error: \"All fields are required.\" });\r\n      return;\r\n    }\r\n\r\n    this.setState({ error: \"\", loading: true });\r\n\r\n    let { comment } = this.state;\r\n    fetch(\"http://localhost:3000\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(comment)\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.error) {\r\n          this.setState({ loading: false, error: res.error });\r\n        } else {\r\n          comment.time = res.time;\r\n          this.props.addComment(comment);\r\n\r\n          this.setState({\r\n            loading: false,\r\n            comment: { ...comment, message: \"\" }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: \"Something went wrong while submitting form.\",\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  isFormValid() {\r\n    return this.state.comment.name !== \"\" && this.state.comment.message !== \"\";\r\n  }\r\n\r\n  renderError() {\r\n    return this.state.error ? (\r\n      <div className=\"alert alert-danger\">{this.state.error}</div>\r\n    ) : null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form method=\"post\" onSubmit={this.onSubmit}>\r\n          <div style={{display:'flex'}} className=\"form-group\">\r\n            <input\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.comment.name}\r\n              className=\"form-control\"\r\n              placeholder=\"nickname\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              style={{width:\"200px\"}}\r\n              disabled='true'\r\n            />\r\n            <button type='button' onClick= {this.goAnonymous}>Go Anonymous</button>\r\n          </div>\r\n\r\n          <div style={{ width: '700px'}} className=\"form-group\">\r\n            <textarea\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.comment.message}\r\n              className=\"form-control\"\r\n              placeholder=\"Add Your Review Here\"\r\n              name=\"message\"\r\n              rows=\"3\"\r\n            />\r\n          </div>\r\n\r\n          {this.renderError()}\r\n\r\n          <div className=\"form-group\">\r\n            <button style={{ border:'none'}} disabled={this.state.loading} className=\"btn btn-primary\">\r\n              Submit Review\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React, { useState } from 'react';\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport StarRatingComponent from './components/StarRatingComponent';\r\nimport CommentListComponent from './components/CommentListComponent';\r\nimport CommentFormComponent from './components/CommentFormComponent';\r\n\r\nfunction App() {\r\n\r\n  const[comments, setComments] = useState([]);\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  function addComment(comment) {\r\n    setLoading(false);\r\n    setComments([comment, ...comments]);\r\n  }\r\n\r\n  return (\r\n    <div style={{'marginLeft':'20px'}}>\r\n    <img src=\"https://cdn.pixabay.com/photo/2015/11/04/20/59/milky-way-1023340_1280.jpg\" \r\n    alt=\"Book Cover\" width=\"150px\" height=\"200px\" style={{'borderRadius':'15px', 'marginTop': '20px'}} />\r\n    <h1>Review [Book Title]</h1> \r\n    <h2>Rating</h2>\r\n    <StarRatingComponent/>\r\n            <CommentFormComponent addComment={addComment} />\r\n            <CommentListComponent loading={loading} comments={comments}/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport Header from './Header'\r\nimport {Route, HashRouter} from \"react-router-dom\";\r\nimport SearchArea from './SearchArea';\r\nimport BookList from './BookList';\r\nimport HomePage from './HomePage';\r\nimport Profile from './Profile';\r\nimport ShoppingCart from './ShoppingCart';\r\nimport Tab from './Tab';\r\nimport Wishlist from './components/WishList';\r\nimport Reviews from './Reviews';\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <div>\r\n                    <Header></Header>\r\n                        <div id=\"route-container\">\r\n                            <Route path=\"/Search\" component={SearchArea}/>\r\n                            <Route path=\"/bookList/:term\" component={BookList}/>\r\n                            <Route path=\"/HomePage\" component={HomePage}/>\r\n                            <Route path=\"/Profile\" component={Profile}/>\r\n                            <Route path=\"/ShoppingCart\" component={ShoppingCart}/>\r\n                            <Route path=\"/BookDetails\" component={Tab}/>\r\n                            <Route path=\"/Wishlist\" component={Wishlist}/>\r\n                            <Route path=\"/Reviews\" component={Reviews}/>\r\n                        </div>\r\n                </div>\r\n            </HashRouter>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}